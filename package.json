{
  "name": "streamline",
  "displayName": "Streamline",
  "description": "Streamline your workflow",
  "version": "0.30.1",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onView:fileExplorer"
  ],
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "rimraf ./out && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "lint": "eslint src --ext ts",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "jest --coverage",
    "test:unit:watch": "npm run test:unit -- --watch",
    "test:integration": "npm run compile && vscode-test",
    "dev": "nodemon -x 'npm run compile'",
    "deploy": "npm run compile && npm run lint && npm run test && vsce package && vsce publish",
    "deploy:pre-release": "npm run compile && npm run lint && npm run test && vsce package --pre-release && vsce publish --pre-release",
    "deploy:beta": "npm run deploy:pre-release",
    "check:unused-exports": "npx ts-unused-exports tsconfig.json src/**/*.ts"
  },
  "devDependencies": {
    "@total-typescript/shoehorn": "^0.1.2",
    "@types/common-tags": "^1.8.4",
    "@types/jest": "^29.5.14",
    "@types/mocha": "^10.0.6",
    "@types/node": "^18.19.68",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "nodemon": "^3.1.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.2.5",
    "typescript": "^5.5.4"
  },
  "publisher": "vitaly-rudenko",
  "icon": "icon.png",
  "repository": {
    "url": "https://github.com/vitaly-rudenko/streamline"
  },
  "dependencies": {
    "common-tags": "^1.8.2",
    "lru-cache": "^10.2.2"
  },
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "relatedFiles",
          "name": "Related files",
          "contextualTitle": "Related files",
          "visibility": "collapsed",
          "icon": "$(sparkle)"
        },
        {
          "id": "bookmarks",
          "name": "Bookmarks",
          "contextualTitle": "Bookmarks",
          "visibility": "collapsed",
          "icon": "$(bookmark)"
        }
      ]
    },
    "commands": [
      {
        "command": "streamline.scopedPaths.changeCurrentScope",
        "title": "Change Current Scope...",
        "icon": "$(chevron-down)"
      },
      {
        "command": "streamline.scopedPaths.enableScope",
        "title": "Enable Scope",
        "icon": "$(circle-large-outline)"
      },
      {
        "command": "streamline.scopedPaths.disableScope",
        "title": "Disable Scope",
        "icon": "$(pass-filled)"
      },
      {
        "command": "streamline.scopedPaths.clearCurrentScope",
        "title": "Clear Current Scope",
        "icon": "$(circle-slash)"
      },
      {
        "command": "streamline.scopedPaths.quickScopeIntoPath",
        "title": "Quick Scope",
        "icon": "$(search)"
      },
      {
        "command": "streamline.scopedPaths.addPathToCurrentScope",
        "title": "Add to Current Scope",
        "icon": "$(add)"
      },
      {
        "command": "streamline.scopedPaths.deletePathFromCurrentScope",
        "title": "Delete from Current Scope",
        "icon": "$(remove)"
      },
      {
        "command": "streamline.scopedPaths.excludePathFromCurrentScope",
        "title": "Exclude from Current Scope",
        "icon": "$(eye-closed)"
      },
      {
        "command": "streamline.scopedPaths.includePathIntoCurrentScope",
        "title": "Include into Current Scope",
        "icon": "$(eye)"
      },
      {
        "command": "streamline.relatedFiles.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "streamline.relatedFiles.enableUseExcludes",
        "title": "Enable Excludes",
        "icon": "$(gear)"
      },
      {
        "command": "streamline.relatedFiles.disableUseExcludes",
        "title": "Disable Excludes",
        "icon": "$(exclude)"
      },
      {
        "command": "streamline.relatedFiles.enableUseGlobalSearch",
        "title": "Enable Global Search",
        "icon": "$(compass)"
      },
      {
        "command": "streamline.relatedFiles.disableUseGlobalSearch",
        "title": "Disable Global Search",
        "icon": "$(compass-dot)"
      },
      {
        "command": "streamline.relatedFiles.quickOpen",
        "title": "Quick Open Related File...",
        "icon": "$(sparkle)"
      },
      {
        "command": "streamline.relatedFiles.openToSide",
        "title": "Open to the Side",
        "icon": "$(split-horizontal)"
      },
      {
        "command": "streamline.relatedFiles.hideWorkspaceFolderInGlobalSearch",
        "title": "Hide Workspace Folder",
        "icon": "$(close)"
      },
      {
        "command": "streamline.bookmarks.add",
        "title": "Add Bookmark",
        "icon": "$(star)"
      },
      {
        "command": "streamline.bookmarks.addFile",
        "title": "Add File to Bookmarks",
        "icon": "$(star)"
      },
      {
        "command": "streamline.bookmarks.addToList",
        "title": "Add Bookmark to List...",
        "icon": "$(star)"
      },
      {
        "command": "streamline.bookmarks.addNote",
        "title": "Add Note...",
        "icon": "$(note)"
      },
      {
        "command": "streamline.bookmarks.addNoteToList",
        "title": "Add Note to List...",
        "icon": "$(note)"
      },
      {
        "command": "streamline.bookmarks.delete",
        "title": "Delete",
        "icon": "$(star-full)"
      },
      {
        "command": "streamline.bookmarks.deleteFile",
        "title": "Delete File from Bookmarks",
        "icon": "$(star-full)"
      },
      {
        "command": "streamline.bookmarks.editNote",
        "title": "Edit Note...",
        "icon": "$(edit)"
      },
      {
        "command": "streamline.bookmarks.move",
        "title": "Move to List..."
      },
      {
        "command": "streamline.bookmarks.revealInExplorer",
        "title": "Reveal in Explorer",
        "icon": "$(eye)"
      },
      {
        "command": "streamline.bookmarks.changeCurrentList",
        "title": "Change Current Bookmarks List...",
        "icon": "$(issue-closed)"
      },
      {
        "command": "streamline.bookmarks.setListAsCurrent",
        "title": "Set as Current List",
        "icon": "$(issue-closed)"
      },
      {
        "command": "streamline.bookmarks.addList",
        "title": "Add Bookmarks List...",
        "icon": "$(add)"
      },
      {
        "command": "streamline.bookmarks.deleteList",
        "title": "Delete",
        "icon": "$(trash)"
      },
      {
        "command": "streamline.bookmarks.renameList",
        "title": "Rename...",
        "icon": "$(edit)"
      },
      {
        "command": "streamline.bookmarks.archiveList",
        "title": "Archive",
        "icon": "$(archive)"
      },
      {
        "command": "streamline.bookmarks.unarchiveList",
        "title": "Unarchive",
        "icon": "$(archive)"
      },
      {
        "command": "streamline.bookmarks.undo",
        "title": "Restore Deleted Bookmarks",
        "icon": "$(discard)"
      },
      {
        "command": "streamline.bookmarks.exportAsJson",
        "title": "Export Bookmarks as JSON",
        "icon": "$(cloud-download)"
      },
      {
        "command": "streamline.currentPath.copy",
        "title": "Copy Current Path",
        "icon": "$(copy)"
      },
      {
        "command": "streamline.smartConfig.toggle",
        "title": "Toggle"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "streamline.scopedPaths.quickScopeIntoPath",
          "when": "false"
        },
        {
          "command": "streamline.scopedPaths.addPathToCurrentScope",
          "when": "false"
        },
        {
          "command": "streamline.scopedPaths.deletePathFromCurrentScope",
          "when": "false"
        },
        {
          "command": "streamline.scopedPaths.excludePathFromCurrentScope",
          "when": "false"
        },
        {
          "command": "streamline.scopedPaths.includePathIntoCurrentScope",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.refresh",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.enableUseExcludes",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.disableUseExcludes",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.enableUseGlobalSearch",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.disableUseGlobalSearch",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.openToSide",
          "when": "false"
        },
        {
          "command": "streamline.relatedFiles.hideWorkspaceFolderInGlobalSearch",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.delete",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.editNote",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.revealInExplorer",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.setListAsCurrent",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.deleteList",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.renameList",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.archiveList",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.unarchiveList",
          "when": "false"
        },
        {
          "command": "streamline.bookmarks.move",
          "when": "false"
        },
        {
          "command": "streamline.smartConfig.toggle",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "streamline.scopedPaths.changeCurrentScope",
          "group": "info@1",
          "when": "view == 'workbench.explorer.fileView'"
        },
        {
          "command": "streamline.scopedPaths.clearCurrentScope",
          "group": "info@2",
          "when": "view == 'workbench.explorer.fileView'"
        },
        {
          "command": "streamline.scopedPaths.enableScope",
          "group": "navigation@1",
          "when": "view == 'workbench.explorer.fileView' && !streamline.scopedPaths.enabled"
        },
        {
          "command": "streamline.scopedPaths.disableScope",
          "group": "navigation@1",
          "when": "view == 'workbench.explorer.fileView' && streamline.scopedPaths.enabled"
        },
        {
          "command": "streamline.relatedFiles.enableUseGlobalSearch",
          "group": "navigation@1",
          "when": "view == relatedFiles && !streamline.relatedFiles.useGlobalSearch"
        },
        {
          "command": "streamline.relatedFiles.disableUseGlobalSearch",
          "group": "navigation@1",
          "when": "view == relatedFiles && streamline.relatedFiles.useGlobalSearch"
        },
        {
          "command": "streamline.relatedFiles.enableUseExcludes",
          "group": "navigation@2",
          "when": "view == relatedFiles && !streamline.relatedFiles.useExcludes"
        },
        {
          "command": "streamline.relatedFiles.disableUseExcludes",
          "group": "navigation@2",
          "when": "view == relatedFiles && streamline.relatedFiles.useExcludes"
        },
        {
          "command": "streamline.relatedFiles.refresh",
          "group": "navigation@3",
          "when": "view == relatedFiles"
        },
        {
          "command": "streamline.bookmarks.undo",
          "group": "navigation@1",
          "when": "view == bookmarks && !streamline.bookmarks.isUndoHistoryEmpty"
        },
        {
          "command": "streamline.bookmarks.exportAsJson",
          "group": "navigation@2",
          "when": "view == bookmarks"
        },
        {
          "command": "streamline.bookmarks.addList",
          "group": "navigation@3",
          "when": "view == bookmarks"
        }
      ],
      "view/item/context": [
        {
          "command": "streamline.bookmarks.revealInExplorer",
          "when": "view == bookmarks && (viewItem == file || viewItem == virtualFile || viewItem == folder)",
          "group": "inline@1"
        },
        {
          "command": "streamline.bookmarks.editNote",
          "when": "view == bookmarks && viewItem == selection",
          "group": "info@1"
        },
        {
          "command": "streamline.bookmarks.move",
          "when": "view == bookmarks && (viewItem == folder || viewItem == file || viewItem == selection)",
          "group": "info@1"
        },
        {
          "command": "streamline.bookmarks.delete",
          "when": "view == bookmarks && (viewItem == file || viewItem == selection || viewItem == folder)",
          "group": "inline@2"
        },
        {
          "command": "streamline.bookmarks.addFile",
          "when": "view == bookmarks && viewItem == virtualFile",
          "group": "inline@2"
        },
        {
          "command": "streamline.bookmarks.setListAsCurrent",
          "when": "view == bookmarks && (viewItem == list || viewItem == archivedList)",
          "group": "inline@1"
        },
        {
          "command": "streamline.bookmarks.renameList",
          "when": "view == bookmarks && (viewItem == list || viewItem == archivedList || viewItem == activeList || viewItem == archivedActiveList)",
          "group": "info@1"
        },
        {
          "command": "streamline.bookmarks.archiveList",
          "when": "view == bookmarks && (viewItem == list || viewItem == activeList)",
          "group": "info@2"
        },
        {
          "command": "streamline.bookmarks.unarchiveList",
          "when": "view == bookmarks && (viewItem == archivedList || viewItem == archivedActiveList)",
          "group": "info@2"
        },
        {
          "command": "streamline.bookmarks.deleteList",
          "when": "view == bookmarks && (viewItem == list || viewItem == activeList || viewItem == archivedList || viewItem == archivedActiveList)",
          "group": "info@3"
        },
        {
          "command": "streamline.relatedFiles.openToSide",
          "when": "view == relatedFiles && viewItem == relatedFile",
          "group": "inline@1"
        },
        {
          "command": "streamline.relatedFiles.hideWorkspaceFolderInGlobalSearch",
          "when": "view == relatedFiles && viewItem == workspaceFolder",
          "group": "info@1"
        }
      ],
      "explorer/context": [
        {
          "command": "streamline.scopedPaths.quickScopeIntoPath",
          "group": "1_workspace@1",
          "when": "activeViewlet == 'workbench.view.explorer'"
        },
        {
          "command": "streamline.scopedPaths.addPathToCurrentScope",
          "group": "1_workspace@2",
          "when": "activeViewlet == 'workbench.view.explorer' && resourcePath not in streamline.scopedPaths.excludedPaths && resourcePath not in streamline.scopedPaths.scopedPaths"
        },
        {
          "command": "streamline.scopedPaths.deletePathFromCurrentScope",
          "group": "1_workspace@3",
          "when": "activeViewlet == 'workbench.view.explorer' && resourcePath not in streamline.scopedPaths.excludedPaths && resourcePath in streamline.scopedPaths.scopedPaths"
        },
        {
          "command": "streamline.scopedPaths.includePathIntoCurrentScope",
          "group": "1_workspace@4",
          "when": "activeViewlet == 'workbench.view.explorer' && resourcePath not in streamline.scopedPaths.scopedPaths && resourcePath in streamline.scopedPaths.excludedPaths"
        },
        {
          "command": "streamline.scopedPaths.excludePathFromCurrentScope",
          "group": "1_workspace@5",
          "when": "activeViewlet == 'workbench.view.explorer' && resourcePath not in streamline.scopedPaths.scopedPaths && resourcePath not in streamline.scopedPaths.excludedPaths"
        },
        {
          "command": "streamline.bookmarks.add",
          "group": "2_workspace@1"
        },
        {
          "command": "streamline.bookmarks.addToList",
          "group": "2_workspace@2"
        }
      ],
      "editor/context": [
        {
          "command": "streamline.bookmarks.add",
          "group": "1_context@1"
        },
        {
          "command": "streamline.bookmarks.addToList",
          "group": "1_context@2"
        },
        {
          "command": "streamline.bookmarks.addNote",
          "group": "1_context@3"
        },
        {
          "command": "streamline.bookmarks.addNoteToList",
          "group": "1_context@3"
        }
      ],
      "editor/title": [
        {
          "command": "streamline.relatedFiles.quickOpen",
          "when": "resourceScheme == file",
          "group": "navigation@1"
        },
        {
          "command": "streamline.bookmarks.addFile",
          "when": "resourceScheme == file && !streamline.bookmarks.activeTextEditorBookmarked",
          "group": "navigation@2"
        },
        {
          "command": "streamline.bookmarks.deleteFile",
          "when": "resourceScheme == file && streamline.bookmarks.activeTextEditorBookmarked",
          "group": "navigation@2"
        }
      ]
    },
    "configuration": {
      "title": "Streamline",
      "properties": {
        "streamline.disabledFeatures": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "bookmarks",
              "currentPath",
              "highlightedPaths",
              "relatedFiles",
              "scopedPaths",
              "smartConfig"
            ]
          },
          "default": [],
          "description": "Completely disable Streamline features"
        },
        "streamline.scopedPaths.scopes": {
          "type": "object",
          "default": {},
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "Scopes"
        },
        "streamline.scopedPaths.workspaceFoldersSnapshot": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Snapshot of Workspace Folders to safely restore after unscoped"
        },
        "streamline.highlightedPaths.patterns": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Highlighted paths"
        },
        "streamline.currentPath.maxLabelLength": {
          "type": "number",
          "default": 60,
          "description": "Smartly shorten current path label when exceeding certain length"
        },
        "streamline.currentPath.collapsedIndicator": {
          "type": "string",
          "default": "⸱⸱⸱",
          "description": "Indicator that will be placed wherever label is shortened"
        },
        "streamline.relatedFiles.useExcludes": {
          "type": "boolean",
          "default": true,
          "description": "Use excludes in related files view"
        },
        "streamline.relatedFiles.useStricterQuickOpenQuery": {
          "type": "boolean",
          "default": false,
          "description": "Keep hyphens or underscores in basename when using 'Quick Open Related Files' command"
        },
        "streamline.relatedFiles.useGlobalSearch": {
          "type": "boolean",
          "default": false,
          "description": "Search related files across all workspace folders"
        },
        "streamline.relatedFiles.exclude": {
          "type": "object",
          "default": {},
          "additionalProperties": {
            "type": "boolean"
          },
          "description": "Custom exclude patterns for related files view"
        },
        "streamline.relatedFiles.excludedSuffixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "spec",
            "test",
            "e2e-spec"
          ],
          "description": "Basename suffixes to exclude from search (e.g. js, ts, test and spec)"
        },
        "streamline.relatedFiles.hiddenWorkspaceFoldersInGlobalSearch": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Hide these workspace folders in related files view when Global Search is enabled"
        },
        "streamline.relatedFiles.maxLabelLength": {
          "type": "number",
          "default": 60,
          "description": "Smartly shorten related file labels when exceeding certain length"
        },
        "streamline.relatedFiles.collapsedIndicator": {
          "type": "string",
          "default": "⸱⸱⸱",
          "description": "Indicator that will be placed wherever label is shortened"
        },
        "streamline.bookmarks.archivedLists": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Archived lists"
        },
        "streamline.bookmarks.serializedBookmarks": {
          "type": "array",
          "default": [],
          "description": "Serialized bookmarks"
        },
        "streamline.smartConfig.defaults": {
          "type": "object",
          "default": {},
          "additionalProperties": true,
          "description": "Default configuration values to fall back to when config(s) are inactive"
        },
        "streamline.smartConfig.configs": {
          "type": "object",
          "default": {},
          "additionalProperties": {
            "type": "object",
            "additionalProperties": true,
            "description": "Configuration preset, can be used in rule definitions"
          },
          "description": "Configuration presets to choose from in \"rules[].apply\" list"
        },
        "streamline.smartConfig.toggles": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Custom toggles that can be used in \"rules[].when[].toggle\" conditions (will appear in the status bar)"
        },
        "streamline.smartConfig.rules": {
          "type": "array",
          "default": [],
          "description": "List of rules, describes which config presets to apply and when",
          "items": {
            "type": "object",
            "required": [
              "apply",
              "when"
            ],
            "description": "Rule definition, consists of config presets list to apply and required conditions",
            "properties": {
              "apply": {
                "type": "array",
                "minLength": 1,
                "description": "Config presets to apply when a condition triggers in the rule",
                "items": {
                  "type": "string"
                }
              },
              "when": {
                "type": "array",
                "minLength": 1,
                "description": "List of conditions for applying config presets - if at least one condition matches, specified config presets will be applied",
                "items": {
                  "type": "object",
                  "properties": {
                    "basename": {
                      "description": "Regular expression for basename of the currently active document",
                      "type": "string"
                    },
                    "path": {
                      "description": "Regular expression for absolute path of the currently active document",
                      "type": "string"
                    },
                    "toggle": {
                      "description": "Triggers when custom toggle is currently enabled",
                      "type": "string"
                    },
                    "colorThemeKind": {
                      "description": "Triggers when current theme is light/dark",
                      "type": "string"
                    },
                    "languageId": {
                      "description": "Triggers for specific language of the currently active document",
                      "type": "string"
                    },
                    "scopeSelected": {
                      "description": "Triggers when a Scope is selected (regardless of being enabled/disabled)",
                      "type": "string"
                    },
                    "scopeEnabled": {
                      "description": "Triggers when a Scope is enabled (regardless of which one is selected)",
                      "type": "boolean"
                    },
                    "scope": {
                      "description": "Triggers when a specific Scope is selected AND enabled",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
